language: node_js
node_js: 10
dist: bionic

branches:
  only:
  - master

_build_job: &build_job
  services:
  - docker
  install:
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker build --build-arg ARCH=$ARCH -f Dockerfile.multiarch -t $TRAVIS_REPO_SLUG:latest-$ARCH .
  - |-
    if [ "$TRAVIS_EVENT_TYPE" = push ]; then
      echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      docker push $TRAVIS_REPO_SLUG:latest-$ARCH
    fi
  script: skip

jobs:
  include:
  - stage: test

  - stage: docker_build
    <<: *build_job
    env:
    - ARCH=amd64
  - <<: *build_job
    env:
    - ARCH=arm32v7
  - <<: *build_job
    env:
    - ARCH=arm64v8

  - stage: docker_manifest
    if: type = push
    services:
    - docker
    env:
    - DOCKER_CLI_EXPERIMENTAL=enabled
    install:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - |-
      docker manifest create $TRAVIS_REPO_SLUG:latest \
        $TRAVIS_REPO_SLUG:latest-amd64 \
        $TRAVIS_REPO_SLUG:latest-arm32v7 \
        $TRAVIS_REPO_SLUG:latest-arm64v8
    - docker manifest annotate $TRAVIS_REPO_SLUG:latest $TRAVIS_REPO_SLUG:latest-amd64 --os linux --arch amd64
    - docker manifest annotate $TRAVIS_REPO_SLUG:latest $TRAVIS_REPO_SLUG:latest-arm32v7 --os linux --arch arm --variant v7
    - docker manifest annotate $TRAVIS_REPO_SLUG:latest $TRAVIS_REPO_SLUG:latest-arm64v8 --os linux --arch arm64 --variant v8
    - docker manifest push $TRAVIS_REPO_SLUG:latest
    script: skip
